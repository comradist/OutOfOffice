@model OutOfOffice.MVC.Models.Employee.EmployeeIndexVM // Update with your actual namespace

@{
    ViewData["Title"] = "Employees";
}


<div class="container mt-3">
    <div class="row">
        <!-- Search, Filter, and Sort Card -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Search and Filter</h5>
                </div>
                <div class="card-body">
                    <form id="filterForm">
                        <div class="form-group">
                            <label for="fullName">Search by Name</label>
                            <input type="text" name="fullName" id="fullName" value="@Model.FullName" placeholder="Enter name" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="subdivisionId">Subdivision</label>
                            <select name="subdivisionId" id="subdivisionId" class="form-control">
                                <option value="">All Subdivisions</option>
                                @foreach (var subdivision in Model.Subdivisions)
                                {
                                    @(subdivision.Id == Model.SubdivisionId ? "selected" : "")
                                    <option value="@subdivision.Id">@subdivision.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="statusId">Status</label>
                            <select name="statusId" id="statusId" class="form-control">
                                <option value="">All Statuses</option>
                                @foreach (var status in Model.RequestStatuses)
                                {
                                    @(status.Id == Model.StatusId ? "selected" : "")
                                    <option value="@status.Id">@status.Name</option>
                                }
                            </select>
                        </div>
                        @* <div class="form-group">
                            <label for="orderBy">Sort By</label>
                            <select name="orderBy" id="orderBy" class="form-control">
                                <option value="name asc" @(Model.OrderBy == "name asc" ? "selected" : "")>Name Ascending</option>
                                <option value="name desc" @(Model.OrderBy == "name desc" ? "selected" : "")>Name Descending</option>
                                <option value="subdivision asc" @(Model.OrderBy == "subdivision asc" ? "selected" : "")>Subdivision Ascending</option>
                                <option value="subdivision desc" @(Model.OrderBy == "subdivision desc" ? "selected" : "")>Subdivision Descending</option>
                                <option value="status asc" @(Model.OrderBy == "status asc" ? "selected" : "")>Status Ascending</option>
                                <option value="status desc" @(Model.OrderBy == "status desc" ? "selected" : "")>Status Descending</option>
                            </select>
                        </div> *@
                        <button type="submit" class="btn btn-primary">Apply Filters</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Employee Data Card -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5>Employees</h5>
                </div>
                <div class="card-body">
                    <table class="table table-bordered table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Employees.First().FullName)</th>
                                <th>@Html.DisplayNameFor(model => model.Employees.First().Subdivision.Name)</th>
                                <th>@Html.DisplayNameFor(model => model.Employees.First().Position.Name)</th>
                                <th>@Html.DisplayNameFor(model => model.Employees.First().Status.Name)</th>
                                <th>@Html.DisplayNameFor(model => model.Employees.First().OutOfOfficeBalance)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="employeeTableBody">
                            @foreach (var item in Model.Employees)
                            {
                                <tr>
                                    <td>@item.FullName</td>
                                    <td>@item.Subdivision.Name</td>
                                    <td>@item.Position.Name</td>
                                    <td>@item.Status.Name</td>
                                    <td>@item.OutOfOfficeBalance</td>
                                    <td>
                                        <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                        <a class="btn btn-warning" asp-action="Deactivate" asp-route-id="@item.Id">Deactivate</a>
                                        <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                                        <a class="btn btn-success" asp-action="AssignToProject" asp-route-id="@item.Id">Assign to Project</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <nav aria-label="Page navigation">
                        <ul class="pagination" id="pagination">
                            @for (var i = 1; i <= Math.Ceiling((double)Model.MetaData.TotalPages / Model.MetaData.PageSize); i++)
                            {
                                <li class="page-item @(Model.MetaData.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" href="#" data-page="@i">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle filter form submission
            $('#filterForm').submit(function (event) {
                event.preventDefault();
                loadEmployees();
            });

            // Handle pagination click
            $('#pagination').on('click', 'a', function (event) {
                event.preventDefault();
                var pageNumber = $(this).data('page');
                $('#filterForm').find('input[name="pageNumber"]').val(pageNumber);
                loadEmployees();
            });

            // Load employees via AJAX
            function loadEmployees() {
                var formData = $('#filterForm').serialize();
                $.get('@Url.Action("GetEmployees")', formData, function (data) {
                    $('#employeeTableBody').empty();
                    $.each(data.employees, function (index, employee) {
                        var row = '<tr>' +
                            '<td>' + employee.fullName + '</td>' +
                            '<td>' + employee.subdivision.name + '</td>' +
                            '<td>' + employee.position.name + '</td>' +
                            '<td>' + employee.status.name + '</td>' +
                            '<td>' + employee.outOfOfficeBalance + '</td>' +
                            '<td>' +
                            '<a class="btn btn-info" href="@Url.Action("Edit", "Employees")/' + employee.id + '">Edit</a>' +
                            '<a class="btn btn-warning" href="@Url.Action("Deactivate", "Employees")/' + employee.id + '">Deactivate</a>' +
                            '<a class="btn btn-info" href="@Url.Action("Details", "Employees")/' + employee.id + '">Details</a>' +
                            '<a class="btn btn-success" href="@Url.Action("AssignToProject", "Employees")/' + employee.id + '">Assign to Project</a>' +
                            '</td>' +
                            '</tr>';
                        $('#employeeTableBody').append(row);
                    });

                    // Update pagination
                    $('#pagination').empty();
                    for (var i = 1; i <= Math.ceil(data.totalItems / data.pageSize); i++) {
                        var pageItem = '<li class="page-item ' + (data.pageNumber === i ? 'active' : '') + '">' +
                            '<a class="page-link" href="#" data-page="' + i + '">' + i + '</a>' +
                            '</li>';
                        $('#pagination').append(pageItem);
                    }
                });
            }

            // Initial load
            loadEmployees();
        });
    </script>
}

